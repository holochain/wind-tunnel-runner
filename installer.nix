{ config, pkgs, lib, modulesPath, ... }:
let
  evaluatedSystem = lib.nixosSystem {
    system = "x86_64-linux";
    modules = [ ./base-install/configuration.nix ];
  };
in
{
  imports = [
    "${modulesPath}/installer/cd-dvd/installation-cd-minimal.nix"
  ];

  isoImage.isoName = lib.mkForce "wind-tunnel-runner-auto-installer-${config.system.nixos.label}-${pkgs.stdenv.hostPlatform.system}.iso";
  services.getty.helpLine = ''
    __/\\\______________/\\\_____________________________/\\\_____________/\\\\\\\\\\\\\\\___________________________________________________________/\\\\\\____________
    __\/\\\_____________\/\\\____________________________\/\\\____________\///////\\\/////___________________________________________________________\////\\\___________
    ___\/\\\_____________\/\\\__/\\\______________________\/\\\__________________\/\\\___________________________________________________________________\/\\\__________
    ____\//\\\____/\\\____/\\\__\///___/\\/\\\\\\__________\/\\\__________________\/\\\________/\\\____/\\\__/\\/\\\\\\____/\\/\\\\\\_______/\\\\\\\\_____\/\\\_________
    ______\//\\\__/\\\\\__/\\\____/\\\_\/\\\////\\\____/\\\\\\\\\__________________\/\\\_______\/\\\___\/\\\_\/\\\////\\\__\/\\\////\\\____/\\\/////\\\____\/\\\________
    ________\//\\\/\\\/\\\/\\\____\/\\\_\/\\\__\//\\\__/\\\////\\\__________________\/\\\_______\/\\\___\/\\\_\/\\\__\//\\\_\/\\\__\//\\\__/\\\\\\\\\\\_____\/\\\_______
    __________\//\\\\\\//\\\\\_____\/\\\_\/\\\___\/\\\_\/\\\__\/\\\__________________\/\\\_______\/\\\___\/\\\_\/\\\___\/\\\_\/\\\___\/\\\_\//\\///////______\/\\\______
    ____________\//\\\__\//\\\______\/\\\_\/\\\___\/\\\_\//\\\\\\\/\\_________________\/\\\_______\//\\\\\\\\\__\/\\\___\/\\\_\/\\\___\/\\\__\//\\\\\\\\\\__/\\\\\\\\\__
    ______________\///____\///_______\///__\///____\///___\///////\//__________________\///_________\/////////___\///____\///__\///____\///____\//////////__\/////////__
    _____________________________________________/\\\\\\\\\_____________________________________________________________________________________________________________
    ____________________________________________/\\\///////\\\__________________________________________________________________________________________________________
    ____________________________________________\/\\\_____\/\\\_________________________________________________________________________________________________________
    _____________________________________________\/\\\\\\\\\\\/_____/\\\____/\\\__/\\/\\\\\\____/\\/\\\\\\_______/\\\\\\\\___/\\/\\\\\\\________________________________
    ______________________________________________\/\\\//////\\\____\/\\\___\/\\\_\/\\\////\\\__\/\\\////\\\____/\\\/////\\\_\/\\\/////\\\______________________________
    _______________________________________________\/\\\____\//\\\___\/\\\___\/\\\_\/\\\__\//\\\_\/\\\__\//\\\__/\\\\\\\\\\\__\/\\\___\///______________________________
    ________________________________________________\/\\\_____\//\\\__\/\\\___\/\\\_\/\\\___\/\\\_\/\\\___\/\\\_\//\\///////___\/\\\____________________________________
    _________________________________________________\/\\\______\//\\\_\//\\\\\\\\\__\/\\\___\/\\\_\/\\\___\/\\\__\//\\\\\\\\\\_\/\\\___________________________________
    __________________________________________________\///________\///___\/////////___\///____\///__\///____\///____\//////////__\///___________________________________

    Automatically erasing disk and installing Wind Tunnel Runner.
  '';

  services.journald.console = "/dev/tty1";

  systemd.services.install = {
    description = "Bootstrap Wind Tunnel Runner NixOS installation";
    wantedBy = [ "multi-user.target" ];
    after = [ "network.target" "polkit.service" ];
    path = [ "/run/current-system/sw/" ];
    script = with pkgs; ''
      set -euxo pipefail

      ${parted}/bin/parted -s /dev/sda -- mklabel msdos
      ${parted}/bin/parted -s /dev/sda -- mkpart primary 1MB -8GB
      ${parted}/bin/parted -s /dev/sda -- set 1 boot on
      ${parted}/bin/parted -s /dev/sda -- mkpart primary linux-swap -8GB 100%

      ${e2fsprogs}/bin/mkfs.ext4 -L nixos /dev/sda1

      ${util-linux}/bin/mkswap -L swap /dev/sda2

      mount /dev/disk/by-label/nixos /mnt

      ${util-linux}/bin/swapon /dev/sda2

      ${coreutils-full}/bin/mkdir -p /mnt/etc/nixos
      ${coreutils-full}/bin/cp -r ${./base-install}/* /mnt/etc/nixos/

      ${config.system.build.nixos-install}/bin/nixos-install \
        --system ${evaluatedSystem.config.system.build.toplevel} \
        --no-root-passwd \
        --cores 0

      ${systemd}/bin/systemctl poweroff
    '';
    serviceConfig = {
      User = "root";
      Type = "oneshot";
    };
  };

}
